package excelProjectTestbed;

import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.ss.usermodel.*;
import java.io.File;
import java.io.IOException;
import java.util.Iterator;
// @ NIPUN KATARIA
public class ExcelReader {
    public static final String SAMPLE_XLSX_FILE_PATH = "170028_A_AppDev_W9_EffortLogger.xlsx";

    public static void main(String[] args) throws IOException, InvalidFormatException {

        // Creating a Workbook from an Excel file (.xls or .xlsx)
        Workbook workbook = WorkbookFactory.create(new File(SAMPLE_XLSX_FILE_PATH));
        System.out.println("The Name of The WorkBook is:  " + SAMPLE_XLSX_FILE_PATH + " \n \n            by Nipun Kataria  \n  ");
        // Retrieving the number of sheets in the Workbook
        System.out.println("Workbook has " + workbook.getNumberOfSheets() + " Sheets : ");

        /*
           =============================================================
           Iterating over all the sheets in the workbook (Multiple ways)
           =============================================================
        */

        // 1. You can obtain a sheetIterator and iterate over it
        Iterator<Sheet> sheetIterator = workbook.sheetIterator();
        System.out.println("No. and Name of Worksheets with Total Row");
        int sno=1;
        while (sheetIterator.hasNext()) {
            Sheet sheet = sheetIterator.next();
            int rowNumber = sheet.getLastRowNum()+1;
            System.out.println("=> Sheet #" + sno + " => Name of Worksheet: " + sheet.getSheetName() 
                                      + " => No. of Rows: " + rowNumber);
            
            sno++;         
        }
        
        
        Iterator<Sheet> sheetIterator1 = workbook.sheetIterator();
        System.out.println("\n\nDetails of Each Row with no. of Columns and contents in each Worksheet\n");
        while (sheetIterator1.hasNext()) {
            Sheet sheet = sheetIterator1.next();
            System.out.println("=> Name of Worksheet: " + sheet.getSheetName()); 
                                      
           int rno= sheet.getFirstRowNum();
           
            // Create a DataFormatter to format and get each cell's value as String
            DataFormatter dataFormatter = new DataFormatter();

            // You can obtain a rowIterator and columnIterator and iterate over them
            Iterator<Row> rowIterator = sheet.rowIterator();
            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();
        //        int colNumber = sheet.getRow(rno).getLastCellNum();
                int colNumber1 = sheet.getRow(rno).getPhysicalNumberOfCells();
                rno++;
                System.out.print(" => Row #" + rno + " => No. of Columns: " + colNumber1);
               
                // Now let's iterate over the columns of the current row
                Iterator<Cell> cellIterator = row.cellIterator();

                while (cellIterator.hasNext()) {
                    Cell cell = cellIterator.next();
                    String cellValue = dataFormatter.formatCellValue(cell);
                    System.out.print(" " + cellValue + "\t");
                }
                System.out.println();
            }
                     
       }
              

        // 2. Or you can use a for-each loop
        System.out.println("Retrieving Sheets using for-each loop");
        for(Sheet sheet: workbook) {
            System.out.println("=> " + sheet.getSheetName());
        }

        // 3. Or you can use a Java 8 forEach with lambda
        System.out.println("Retrieving Sheets using Java 8 forEach with lambda");
        workbook.forEach(sheet -> {
            System.out.println("=> " + sheet.getSheetName());
        });

        /*
           ==================================================================
           Iterating over all the rows and columns in a Sheet (Multiple ways)
           ==================================================================
        */

        // Getting the Sheet at index zero
        Sheet sheet = workbook.getSheetAt(0);

        // Create a DataFormatter to format and get each cell's value as String
        DataFormatter dataFormatter = new DataFormatter();

        // 1. You can obtain a rowIterator and columnIterator and iterate over them
        System.out.println("\n\nIterating over Rows and Columns using Iterator\n");
        Iterator<Row> rowIterator = sheet.rowIterator();
        while (rowIterator.hasNext()) {
            Row row = rowIterator.next();

            // Now let's iterate over the columns of the current row
            Iterator<Cell> cellIterator = row.cellIterator();

            while (cellIterator.hasNext()) {
                Cell cell = cellIterator.next();
                String cellValue = dataFormatter.formatCellValue(cell);
                System.out.print(cellValue + "\t");
            }
            System.out.println();
        }

        // 2. Or you can use a for-each loop to iterate over the rows and columns
        System.out.println("\n\nIterating over Rows and Columns using for-each loop\n");
        for (Row row: sheet) {
            for(Cell cell: row) {
                String cellValue = dataFormatter.formatCellValue(cell);
                System.out.print(cellValue + "\t");
            }
            System.out.println();
        }

        // 3. Or you can use Java 8 forEach loop with lambda
        System.out.println("\n\nIterating over Rows and Columns using Java 8 forEach with lambda\n");
        sheet.forEach(row -> {
            row.forEach(cell -> {
                String cellValue = dataFormatter.formatCellValue(cell);
                System.out.print(cellValue + "\t");
            });
            System.out.println();
        });

        // Closing the workbook
        workbook.close();
        System.out.println("");
        System.out.println("");
        System.out.println("All the sheets present in the workbook are:");
        int x = 1;
        for(Sheet sheet1: workbook)
        {
        	System.out.println(x + sheet1.getSheetName());
        	x++;
        }
        int rowNumber = sheet.getLastRowNum()+1;
        System.out.println("");
        System.out.println("Total Number of Rows in This Sheet are:" + rowNumber);
       
        int colNumber = sheet.getRow(0).getLastCellNum();
        System.out.println("");
        System.out.println("Total Number of Columns in This Sheet are:" + colNumber);
        System.out.println("");
        System.out.println("This Workbook has  " + workbook.getNumberOfSheets() + " Number of Sheets");
       
        
        }
}
